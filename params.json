{
  "name": "containerz.info",
  "tagline": "All things Linux containers",
  "body": "This website is dedicated to the documentation of Linux containers. As mentioned [elsewhere](https://articles.microservices.com/containers-are-a-lie-2521afda1f81), in a sense there \r\nare no containers per se, but Linux kernel features such as namespaces and cgroups that are\r\nbundled and used in different ways to provide an abstraction we call `container`. Examples of \r\nthis bundling are Docker, CoreOS [appc](https://github.com/appc/spec/), OCI [runc](https://runc.io/),\r\nCanonical [LXC/LXD](https://linuxcontainers.org/), and [OpenVZ](https://openvz.org/).\r\n\r\n## Terminology\r\n\r\nConceptually the ER diagram for namespaces, cgroups and process (groups) looks as follows:\r\n\r\n![cinf mon](img/n-p-c.png)\r\n\r\nRead: a process (or more precise a process group) can be in one or more namespaces and can be controlled by one or more cgroups, where the namespaces provide isolation concerning a certain aspect, such as user IDs, networking stack or mount points and the cgroups allowing to control resource consumption as well as provide accounting information in terms of resource usage. \r\n\r\n\r\n## Linux namespaces\r\n\r\n[namespaces](http://man7.org/linux/man-pages/man7/namespaces.7.html):\r\n\r\n- Mount/`CLONE_NEWNS` (since Linux 2.4.19) via `mount`, `/proc/$PID/mounts`: filesystem mount points\r\n- UTS/`CLONE_NEWUTS` (since Linux 2.6.19) via `uname -n`, `hostname -f` : nodename/hostname and (NIS) domain name\r\n- IPC/`CLONE_NEWIPC` (since Linux 2.6.19) via `/proc/sys/fs/mqueue`, `/proc/sys/kernel`, `/proc/sysvipc`: interprocess communication resource isolation: System V IPC objects, POSIX message queues\r\n- PID/`CLONE_NEWPID` (since Linux 2.6.24) via `/proc/$PID/status -> NSpid, NSpgid`: process ID number space isolation: PID inside/PID outside the namespace; PID namespaces can be nested\r\n- Network/`CLONE_NEWNET` (completed in Linux 2.6.29) via `ip netns list`, `/proc/net`, `/sys/class/net`: network system resources: network devices, IP addresses, IP routing tables, port numbers, etc.\r\n- User/`CLONE_NEWUSER` (completed in Linux 3.8) via `id`, `/proc/$PID/uid_map`, `/proc/$PID/gid_map`: user and group ID number space isolation. UID+GIDs inside/outside the namespace\r\n- Cgroup/`CLONE_NEWCGROUP` (since Linux 4.6) via `/sys/fs/cgroup/`, `/proc/cgroups`, `/proc/$PID/cgroup`: cgroups\r\n- To list all namespaces of a process: `ls -l /proc/$PID/ns`\r\n\r\n## Linux cgroups\r\n\r\n[cgroups](http://man7.org/linux/man-pages/man7/cgroups.7.html):\r\n\r\n- [cpuset](https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt)\r\n- [cpu](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)\r\n- [cpuacct](https://www.kernel.org/doc/Documentation/cgroup-v1/cpuacct.txt)\r\n- [memory](https://www.kernel.org/doc/Documentation/cgroup-v1/memory.txt)\r\n- [devices](https://www.kernel.org/doc/Documentation/cgroup-v1/devices.txt)\r\n- [blkio](https://www.kernel.org/doc/Documentation/cgroup-v1/blkio-controller.txt)\r\n- perf_event\r\n- [net_cls](https://www.kernel.org/doc/Documentation/cgroup-v1/net_cls.txt)\r\n\r\n### Tooling\r\n\r\n- systemd [cgtop](https://www.freedesktop.org/software/systemd/man/systemd-cgtop.html)\r\n- [lsns](http://karelzak.blogspot.ie/2015/12/lsns8-new-command-to-list-linux.html) via [karelzak/util-linux](https://github.com/karelzak/util-linux)\r\n- [c9s/goprocinfo](https://github.com/c9s/goprocinfo)\r\n- [shirou/gopsutil](https://github.com/shirou/gopsutil/)\r\n- [yadutaf/ctop](https://github.com/yadutaf/ctop)\r\n\r\n## Reading material\r\n\r\n- [man lsns](http://man7.org/linux/man-pages/man8/lsns.8.html)\r\n- [Hands on Linux sandbox with namespaces and cgroups](https://blogs.rdoproject.org/7761/hands-on-linux-sandbox-with-namespaces-and-cgroups), Tristan Cacqueray (2015)\r\n- [Namespaces in operation, part 1: namespaces overview](https://lwn.net/Articles/531114/), lwn.net (2013)\r\n- [Netdev 1.1 - Namespaces and CGroups, the basis of Linux containers](https://www.youtube.com/watch?v=zMJD8PJKoYQ), Rami Rosen, video (2016)\r\n- [Resource management: Linux kernel Namespaces and cgroups](http://www.haifux.org/lectures/299/netLec7.pdf), Rami Rosen (2013)\r\n- [THE `/proc` FILESYSTEM](https://www.mjmwired.net/kernel/Documentation/filesystems/proc.txt),  Terrehon Bowden et al (1999 - 2009)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}